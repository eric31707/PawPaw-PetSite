@*<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>*@
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>

<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="stylesheet" type="text/css" href="frontDetail.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>eCommerce Product Detail</title>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">
    <style>
        .btn-primary.active {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .button1 {
            margin: 10px 8px 12px 0px;
        }

        .title {
            font-weight: bold;
            margin-bottom: 0px;
            margin-top: 20px;
        }

        .productName {
            margin-bottom: 0;
            margin-top: 30px;
            font-weight: bold;
        }

        .clickButton {
            display: inline-block;
            font-size: 24px;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            outline: none;
            color: #fff;
            background-color: #4CAF50;
            border: none;
            border-radius: 15px;
            width: 40px;
            height: 32px;
        }

            .clickButton:hover {
                background-color: #3e8e41
            }

            .clickButton:active {
                background-color: #3e8e41;
                box-shadow: 0 5px #666;
                transform: translateY(4px);
            }

        .qty {
            padding-left:10px;
            padding-right:10px;
             padding-top:5px;
            padding-bottom:5px;
            border-width:6px;
            width: 30px;
            height: 32px;
            border-width: 3px;
            border-style: solid;
            border-color: #00BD56;
          
            margin: 8px;
            text-align: center;
        }

    </style>
</head>

<body>
    <div class="container mt-5" id="app">
        <div class="card ">
            <div class="container-fliud row p-5 bo">
                <div class="preview col-6 col-md-6">
                    <div class="preview-pic tab-content">
                        <div class="tab-pane active" id="pic-1"><img width="500" height="500" :src="productDto.images" /></div>
                    </div>
                </div>
                <div class="col-6">
                <div class="product-description ">
                    <h2 class="productName">{{productDto.name}}</h2>
                </div>
                
                <div class="product-description p-3">
                    <h4 class="title">商品描述:</h4>
                    <span style="margin-top:20px;font-size:18px">{{productDto.description}}</span>
                </div>
                <div>
                    <div class="product-description ">
                        <h2 style="color:darkgreen" class="row-cols-2">NT${{productDto.price}}</h2>
                    </div>
                    </div>
                    <div class="product-form product-variations product-color ">
                        <span class="title" style="color:lightslategray;font-size:20px">顏色</span>
                    </div>
                

                <span v-for="item in color" class="button1" :key="item">
                    <input type="button" :value="item" class="btn btn-outline-success border border-success" @@click="selectColor(item)"
                           :class="{ active: selectedColor === item }" />
                </span>
                <div class="product-form product-variations product-size ">
                    <span class="title" style="color:lightslategray;font-size:20px">尺寸</span>
                </div>

                <span v-for="item in size" class="button1">
                    <input type="button" :value="item" class="btn btn-outline-success border border-success" @@click="selectSize(item)"
                           :class="{ active: selectedSize === item }" />
                </span>

                <div class="product-form product-variations product-size ">
                    <span class="title" style="color:lightslategray;font-size:20px">口味</span>
                </div>

                <span v-for="item in flavor" class="button1">
                    <input type="button" :value="item" class="btn btn-outline-success border border-success" @@click="selectFlavor(item)"
                           :class="{ active: selectedFlavor === item }" />
                </span>
                <div class="product-form product-qty " style="padding:10px 0px 10px 0px">
                    <span class="" style="color:lightslategray; font-weight: bold;font-size:20px">購買數量</span>
                    <div>
                        
                        <button class="clickButton ml-2 " style="font-size:20px" @@click="subQty()">-</button>
                       
                        <span class="qty ml-2 ml-1 mr-1" style="">{{quantity}}</span>
                        
                        <button class="clickButton ml-2" style="font-size:20px;align-items: center;" @@click="addQty()"><span style="text-align: :center;">+</span></button>
                        

                    </div>
                </div>
                <div class="row mt-3">
                    <button class="btn btn-success mb-4" style="width:400px;height:40px" @@click="addToCart(selectedProduct)">
                        <i class="d-icon-bag"></i>加入購物車
                    </button>
                </div>
            </div></div>
        </div>
    </div>
</body>

@section Scripts
    {
    <script src="https://unpkg.com/vue@next"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.3/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        var webApiBaseUri = "https://localhost:7150";
        var app = {
            store,
            data() {
                return {
                    productDto: [],
                    color: [],
                    size: [],
                    flavor: [],
                    quantity: 1,
                    selectedColor: "無",
                    selectedSize: "無",
                    selectedFlavor: "無",

                }
            },
            mounted() {
                let _this = this;
                _this.getProductDetail();

            },
            methods: {
                getProductDetail() {
                    let _this = this;
                    var id = window.location.search.substring(1);
                    axios.get(`${webApiBaseUri}/api/products/${id}`, { withCredentials: true })
                        .then(response => {
                            _this.productDto = response.data;
                            let uniqueColor = [];
                            _this.productDto.products.forEach(item => {
                                if (!uniqueColor.includes(item.color) && item.color != "無") {
                                    uniqueColor.push(item.color);
                                }
                            });
                            let uniqueSize = [];
                            _this.productDto.products.forEach(item => {
                                if (!uniqueSize.includes(item.size) && item.size != "無") {
                                    uniqueSize.push(item.size);
                                }
                            });
                            let uniqueFlavor = [];
                            _this.productDto.products.forEach(product => {
                                if (!uniqueFlavor.includes(product.flavor) && product.flavor != "無") {
                                    uniqueFlavor.push(product.flavor);
                                }
                            });
                            _this.color = uniqueColor;
                            _this.size = uniqueSize;
                            _this.flavor = uniqueFlavor;
                        })
                        .catch(error => {
                            console.log(error);
                        });
                },
                selectColor(item) {
                    let _this = this;
                    _this.selectedColor = item;
                    let uniqueSize = [];
                    _this.productDto.products.forEach(product => {
                        if (product.color == item) {
                            if (!uniqueSize.includes(product.size) && product.size != "無") {
                                uniqueSize.push(product.size);
                            }
                        }
                    });
                    _this.size = uniqueSize;

                },
                selectSize(item) {
                    let _this = this;
                    _this.selectedSize = item;
                    let uniqueFlavor = [];
                    _this.productDto.products.forEach(product => {
                        if (product.size == item) {
                            if (!uniqueFlavor.includes(product.flavor) && product.flavor != "無") {
                                uniqueFlavor.push(product.flavor);
                            }
                        }
                    });
                    _this.flavor = uniqueFlavor;
                },
                selectFlavor(item) {
                    let _this = this;
                    _this.selectedFlavor = item;
                },
                addToCart() {
                    let _this = this;
                    let selectedProduct = {};
                    _this.productDto.products.forEach(product => {
                        if (product.color == _this.selectedColor && product.size == _this.selectedSize && product.flavor == _this.selectedFlavor) {
                            selectedProduct = product;
                        }
                    });

                    if (Object.keys(selectedProduct).length === 0) {
                        Swal.fire({
                            icon: 'error',
                            title: `請選擇規格`,
                            showConfirmButton: false,
                            timer: 1500
                        })
                        return;
                    }
                    let request = {
                        Id: selectedProduct.productId,
                        Qty: _this.quantity
                    }
                    axios.post(`${webApiBaseUri}/api/Carts`, request, { withCredentials: true })
                        .then(response => {
                            store.dispatch('getCartQuantity')
                            Swal.fire({
                                icon: 'success',
                                title: `已加入購物車`,
                                showConfirmButton: false,
                                timer: 1500
                            });
                        })
                        .catch(error => {
                            console.log(error);
                        });

                },
                addQty() {
                    let _this = this;
                    _this.quantity++;
                },

                subQty() {
                    let _this = this;
                    if (_this.quantity > 1) {
                        _this.quantity--;
                    }
                }

            },
        }
        Vue.createApp(app).mount('#app');


    </script>
    }
